<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.college.dao.AnnouncementMapper">
    <resultMap id="BaseResultMap" type="com.edu.college.pojo.Announcement">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="from_user_id" jdbcType="INTEGER" property="fromUserId"/>
        <result column="to_user_id" jdbcType="INTEGER" property="toUserId"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.edu.college.pojo.Announcement">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, title, from_user_id, to_user_id
    </sql>
    <sql id="Blob_Column_List">
        content
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from announcement
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByUserId" resultMap="BaseResultMap">
        select<include refid="Base_Column_List"/>,
        <include refid="Blob_Column_List"/>
        from announcement
        <if test="userId!=null">
            where to_user_id = #{userId} or to_user_id is null
        </if>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from announcement
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByIds">
        delete
        from announcement
        where id in
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.edu.college.pojo.Announcement">
        insert into announcement (title, from_user_id,
                                  to_user_id, content)
        values (#{title,jdbcType=VARCHAR}, #{fromUserId,jdbcType=INTEGER},
                #{toUserId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.edu.college.pojo.Announcement">
        insert into announcement
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                title,
            </if>
            <if test="fromUserId != null">
                from_user_id,
            </if>
            <if test="toUserId != null">
                to_user_id,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="fromUserId != null">
                #{fromUserId,jdbcType=INTEGER},
            </if>
            <if test="toUserId != null">
                #{toUserId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.edu.college.pojo.Announcement">
        update announcement
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="fromUserId != null">
                from_user_id = #{fromUserId,jdbcType=INTEGER},
            </if>
            <if test="toUserId != null">
                to_user_id = #{toUserId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.edu.college.pojo.Announcement">
        update announcement
        set title        = #{title,jdbcType=VARCHAR},
            from_user_id = #{fromUserId,jdbcType=INTEGER},
            to_user_id   = #{toUserId,jdbcType=INTEGER},
            content      = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.edu.college.pojo.Announcement">
        update announcement
        set title        = #{title,jdbcType=VARCHAR},
            from_user_id = #{fromUserId,jdbcType=INTEGER},
            to_user_id   = #{toUserId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>