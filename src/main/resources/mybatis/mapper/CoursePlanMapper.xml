<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.college.dao.CoursePlanMapper">
    <resultMap id="BaseResultMap" type="com.edu.college.pojo.CoursePlan">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="week" jdbcType="INTEGER" property="week"/>
        <result column="section" jdbcType="INTEGER" property="section"/>
        <result column="alternate" jdbcType="INTEGER" property="alternate"/>
        <result column="start" jdbcType="INTEGER" property="start"/>
        <result column="end" jdbcType="INTEGER" property="end"/>
        <result column="course_id" jdbcType="INTEGER" property="courseId"/>
        <result column="teacher_id" jdbcType="INTEGER" property="teacherId"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, week, `section`, alternate, `start`, `end`, course_id, teacher_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from course_plan
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="getAll" resultType="com.edu.college.pojo.vo.CoursePlanVO">
        select week, section, start, end, c.name courseName, u.name teacherName
        from course_plan p
        left join course c on p.course_id = c.id
        left join user u on u.id = p.teacher_id
        <if test="teacherId!=null">
            where p.teacher_id = #{teacherId}
        </if>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from course_plan
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="delete" parameterType="com.edu.college.pojo.CoursePlan">
        delete
        from course_plan
        where week = #{week}
          and section = #{section}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.edu.college.pojo.CoursePlan"
            useGeneratedKeys="true">
        insert into course_plan (week, `section`, alternate,
                                 `start`, `end`, course_id,
                                 teacher_id)
        values (#{week,jdbcType=INTEGER}, #{section,jdbcType=INTEGER}, #{alternate,jdbcType=INTEGER},
                #{start,jdbcType=INTEGER}, #{end,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER},
                #{teacherId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.edu.college.pojo.CoursePlan"
            useGeneratedKeys="true">
        insert into course_plan
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="week != null">
                week,
            </if>
            <if test="section != null">
                `section`,
            </if>
            <if test="alternate != null">
                alternate,
            </if>
            <if test="start != null">
                `start`,
            </if>
            <if test="end != null">
                `end`,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="teacherId != null">
                teacher_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="week != null">
                #{week,jdbcType=INTEGER},
            </if>
            <if test="section != null">
                #{section,jdbcType=INTEGER},
            </if>
            <if test="alternate != null">
                #{alternate,jdbcType=INTEGER},
            </if>
            <if test="start != null">
                #{start,jdbcType=INTEGER},
            </if>
            <if test="end != null">
                #{end,jdbcType=INTEGER},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=INTEGER},
            </if>
            <if test="teacherId != null">
                #{teacherId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.edu.college.pojo.CoursePlan">
        update course_plan
        <set>
            <if test="week != null">
                week = #{week,jdbcType=INTEGER},
            </if>
            <if test="section != null">
                `section` = #{section,jdbcType=INTEGER},
            </if>
            <if test="alternate != null">
                alternate = #{alternate,jdbcType=INTEGER},
            </if>
            <if test="start != null">
                `start` = #{start,jdbcType=INTEGER},
            </if>
            <if test="end != null">
                `end` = #{end,jdbcType=INTEGER},
            </if>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=INTEGER},
            </if>
            <if test="teacherId != null">
                teacher_id = #{teacherId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.edu.college.pojo.CoursePlan">
        update course_plan
        set week       = #{week,jdbcType=INTEGER},
            `section`  = #{section,jdbcType=INTEGER},
            alternate  = #{alternate,jdbcType=INTEGER},
            `start`    = #{start,jdbcType=INTEGER},
            `end`      = #{end,jdbcType=INTEGER},
            course_id  = #{courseId,jdbcType=INTEGER},
            teacher_id = #{teacherId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="saveOrUpdate" parameterType="com.edu.college.pojo.CoursePlan">
        insert course_plan (week, section, start, end, course_id, teacher_id)
        values (#{week}, #{section}, #{start}, #{end}, #{courseId}, #{teacherId})
        ON DUPLICATE KEY UPDATE start      = #{start},
                                end        = #{end},
                                course_id  = #{courseId},
                                teacher_id = #{teacherId}
    </update>
</mapper>